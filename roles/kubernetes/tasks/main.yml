- name: install kubernetes repo
  yum_repository:
    name: kubernetes
    description: kubernetes repo
    baseurl: "{{kubernetes_repo}}"
    gpgcheck: yes
    gpgkey: "{{kubernetes_gpgkey}}"
    file: kubernetes
  become: yes

- name: install packages
  yum:
    name: "{{kube_packages}}"
    state: present
  become: yes

- name: get cgroup info
  shell: docker info | grep "Cgroup Driver" | awk '{print $3}'
  register: cgroup_info
  become: yes

- name: enable the proper cgroup driver
  replace:
    path: "{{kubeadm_conf}}"
    regexp: "systemd"
    replace: "{{cgroup_info}}"
  register: cgroup_kube
  become: yes

- name: set dns server inside service cidr
  replace:
    path: "{{kubeadm_conf}}"
    regexp: 10.96.0.10
    replace: "{{dns_svc_cidr}}"
  register: dns_kube
  become: yes

- name: reload kubelet
  service:
    name: kubelet
    state: reloaded
  become: yes
  when: cgroup_kube.changed or dns_kube.changed

- name: start and enable kubelet
  service:
    name: kubelet
    state: started
    enabled: yes
  become: yes

- name: check kubernetes status
  stat:
    path: /etc/kubernetes/admin.conf
  become: yes
  register: cluster_status

- name: check if kubelet is listening
  shell: ss -4 state listening -p | grep kubelet
  become: yes
  register: kube_listening

- name: clean failed kubelet listener
  command: kubeadm reset
  become: yes
  when: 
    - cluster_status_stat.exists == False
    - kube_listening.stdout.find("kubelet") != -1

- name: deploy kubernetes with kubeadm
  command: kubeadm init --pod-network-cidr={{pod_net_cidr}} --service-cidr={{service_cidr}}
  become: yes
  when: cluster_status.stat.exists == False

- name: make kubeadm creds folder
  file:
    name: $HOME/.kube
    state: directory

- name: copy admin.conf to kube conf
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    owner: "{{ansible_user_id}}"
    group: "{{ansible_user_gid}}"
    remote_src: yes
  become: yes

- name: apply rbac config
  k8s_raw:
    state: present
    src: "{{rbac_config}}"
    force: yes

- name: download canal config
  get_url:
    url: "{{canal_config}}"
    dest: "{{canal_config_path}}"

- name: update canal config
  replace:
    path: "{{canal_config_path}}"
    regexp: 10.244.0.0/16
    replace: "{{pod_net_cidr}}"
  become: yes

- name: apply canal config
  k8s_raw:
    state: present
    src: "{{canal_config_path}}"
    force: yes

- name: taint nodes
  command: kubectl taint nodes --all=true  node-role.kubernetes.io/master:NoSchedule-