- name: deploy mariadb
  shell: helm install --debug {{workdir}}/kolla-kubernetes/helm/service/mariadb --namespace kolla --name mariadb --values ./cloud.yaml
  args:
    chdir: "{{workdir}}"

- name: wait for mariadb
  pause:
    minutes: 2

- name: deploy the rest of services
  shell: "{{item}}"
  with_items:
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/rabbitmq --namespace kolla --name rabbitmq --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/memcached --namespace kolla --name memcached --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/keystone --namespace kolla --name keystone --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/glance --namespace kolla --name glance --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/cinder-control --namespace kolla --name cinder-control --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/horizon --namespace kolla --name horizon --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/openvswitch --namespace kolla --name openvswitch --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/neutron --namespace kolla --name neutron --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/nova-control --namespace kolla --name nova-control --values ./cloud.yaml
    - helm install --debug {{workdir}}/kolla-kubernetes/helm/service/nova-compute --namespace kolla --name nova-compute --values ./cloud.yaml
  args:
    chdir: "{{workdir}}"

- name: wait for openstack to deploy
  pause:
    minutes: 2

- name: build keystone local admin
  shell: "{{workdir}}/kolla-kubernetes/tools/build_local_admin_keystonerc.sh ext"
  args:
    chdir: "{{workdir}}"

- name: create openrc file
  shell: . ~/keystonerc_admin
  args:
    chdir: "{{workdir}}"

- name: install openstack clients
  pip:
    name: "{{item}}"
    state: present
  with_items:
    - python-openstackclient
    - python-neutronclient
    - python-cinderclient

- name: copy script
  file:
    src: "init-runonce"
    dest: "{{workdir}}/init-runonce"
    mode: 0700

- name: make final configurations
  shell: "{{workdir}}/init-runonce"
  args:
    chdir: "{{workdir}}"
